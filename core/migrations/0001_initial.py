# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-10-12 15:33
from __future__ import unicode_literals

import core.models.badge
import core.models.files_link
import core.models.person.person
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='badge names')),
                ('badge_pic', models.FileField(null=True, upload_to=core.models.badge.get_upload_path, verbose_name='badge pic')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Badge_link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=1, verbose_name='number of achieving this badge')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='certificate title')),
                ('description', models.CharField(max_length=400, verbose_name='certificate desc')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='post creation date')),
            ],
        ),
        migrations.CreateModel(
            name='Certificate_level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(default=1, verbose_name='certificate-level')),
                ('level_description', models.CharField(max_length=500, verbose_name='description for level')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='post creation date')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='levels', to='core.Certificate')),
            ],
        ),
        migrations.CreateModel(
            name='Certificate_link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='class creation date')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=1000, verbose_name='comment body')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='post creation date')),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_message_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='post creation date')),
                ('type', models.CharField(default='', max_length=10, verbose_name='conversation type')),
            ],
        ),
        migrations.CreateModel(
            name='Conversation_message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=1000, verbose_name='message body')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='message creation date')),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='file title')),
                ('description', models.CharField(blank=True, default='', max_length=1000, verbose_name='file body')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='file creation date')),
                ('data', models.FileField(upload_to=core.models.files_link.get_upload_path, verbose_name='file')),
            ],
        ),
        migrations.CreateModel(
            name='Kelaas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='class name')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='class creation date')),
                ('description', models.CharField(max_length=500, verbose_name='class description')),
                ('gender', models.IntegerField(verbose_name='gender type(1 for men, 0 for women, 2 for both)')),
                ('invite_code', models.CharField(max_length=10, verbose_name='invite link for kelaas')),
                ('is_public', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(default=None, max_length=128, null=True, verbose_name='password')),
                ('has_new_password', models.BooleanField(default=False, verbose_name='is on new hashing algorithm or not')),
                ('type', models.CharField(default='', max_length=7, verbose_name='user type')),
                ('first_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='last name')),
                ('email', models.CharField(default=None, max_length=200, null=True, verbose_name='email address')),
                ('phone_number', models.CharField(default='', max_length=12, verbose_name='phone number')),
                ('phone_number_verified', models.BooleanField(default=False, verbose_name='determine whether phone is verified or not')),
                ('create_date', models.DateTimeField(verbose_name='creation date')),
                ('profile_pic', models.FileField(blank=True, upload_to=core.models.person.person.get_upload_path, verbose_name='profile pic')),
                ('signup_completed', models.BooleanField(default=False, verbose_name='signup progress completed(bool)')),
                ('last_sys_notification_seen', models.DateTimeField(default=None, null=True, verbose_name='last_sys_notification_seen')),
                ('fard_access_token', models.CharField(default='', max_length=100, verbose_name='access_token for getting data from fard.ir')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, null=True, verbose_name='post title')),
                ('description', models.CharField(max_length=2000, verbose_name='post body')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='post creation date')),
                ('type', models.CharField(default='', max_length=17, verbose_name='post type')),
            ],
        ),
        migrations.CreateModel(
            name='Sys_file',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='file title')),
                ('data', models.FileField(upload_to='sys/', verbose_name='file')),
            ],
        ),
        migrations.CreateModel(
            name='System_notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='post title')),
                ('description', models.CharField(max_length=1000, verbose_name='post body')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='sys_notification creation date')),
                ('type', models.CharField(max_length=30, verbose_name='notification type')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Tag name')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=1000, verbose_name='task body')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='task creation date')),
                ('due_date', models.DateTimeField(default=None, null=True, verbose_name='task due date')),
                ('is_done', models.BooleanField(default=False)),
                ('kelaas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_progress_tasks', to='core.Kelaas')),
            ],
        ),
        migrations.CreateModel(
            name='Temp_phone_number',
            fields=[
                ('phone_number', models.CharField(max_length=15, primary_key=True, serialize=False, verbose_name='phone')),
                ('last_send_sms_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='last sent sms time')),
                ('code', models.CharField(max_length=6, verbose_name='security code')),
                ('validator', models.CharField(max_length=30, verbose_name='phone number validator')),
                ('is_validated', models.BooleanField(default=False)),
                ('is_registered', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='User_temp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fard_access_token', models.CharField(max_length=100, verbose_name='temp for saving access token')),
                ('username', models.CharField(max_length=100, verbose_name='temp for user')),
                ('first_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='last name')),
                ('email', models.CharField(blank=True, max_length=200, null=True, verbose_name='email address')),
                ('gender', models.IntegerField(blank=True, default=None, null=True, verbose_name='gender type(1 for men, 0 for women)')),
            ],
        ),
        migrations.CreateModel(
            name='Conversation_dialog',
            fields=[
                ('conversation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Conversation')),
            ],
            bases=('core.conversation',),
        ),
        migrations.CreateModel(
            name='Conversation_group',
            fields=[
                ('conversation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Conversation')),
            ],
            bases=('core.conversation',),
        ),
        migrations.CreateModel(
            name='Kelaas_post',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Post')),
            ],
            bases=('core.post',),
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Person')),
            ],
            bases=('core.person',),
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Post')),
            ],
            bases=('core.post',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Person')),
                ('age', models.IntegerField(verbose_name='student age')),
                ('code', models.CharField(max_length=10, verbose_name='invite link for parent')),
                ('gender', models.IntegerField(blank=True, default=None, null=True, verbose_name='gender type(1 for men, 0 for women)')),
                ('parents', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='childes', to='core.Parent')),
            ],
            options={
                'ordering': ['-id'],
            },
            bases=('core.person',),
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Person')),
                ('gender', models.IntegerField(blank=True, default=None, null=True, verbose_name='gender type(1 for men, 0 for women)')),
            ],
            bases=('core.person',),
        ),
        migrations.AddField(
            model_name='task',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='core.Person'),
        ),
        migrations.AddField(
            model_name='post',
            name='kelaas',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='core.Kelaas'),
        ),
        migrations.AddField(
            model_name='person',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='kelaas',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='kelaases', to='core.Tag'),
        ),
        migrations.AddField(
            model_name='file',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_files', to='core.Person'),
        ),
        migrations.AddField(
            model_name='conversation_message',
            name='conversation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='core.Conversation'),
        ),
        migrations.AddField(
            model_name='conversation_message',
            name='writer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Person'),
        ),
        migrations.AddField(
            model_name='conversation',
            name='kelaas',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='core.Kelaas'),
        ),
        migrations.AddField(
            model_name='conversation',
            name='members',
            field=models.ManyToManyField(related_name='conversations', to='core.Person'),
        ),
        migrations.AddField(
            model_name='comment',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.Person'),
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.Post'),
        ),
        migrations.AddField(
            model_name='certificate_link',
            name='assigner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aasigned_certificate', to='core.Person'),
        ),
        migrations.AddField(
            model_name='certificate_link',
            name='certificate_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='core.Certificate_level'),
        ),
        migrations.AddField(
            model_name='certificate_link',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to='core.Person'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_certificates', to='core.Person'),
        ),
        migrations.AddField(
            model_name='badge_link',
            name='kelaas',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badges', to='core.Kelaas'),
        ),
        migrations.AddField(
            model_name='badge_link',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='core.Badge'),
        ),
        migrations.AddField(
            model_name='story',
            name='likes',
            field=models.ManyToManyField(to='core.Person'),
        ),
        migrations.AddField(
            model_name='story',
            name='story_pic',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.File'),
        ),
        migrations.AddField(
            model_name='post',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='core.Teacher'),
        ),
        migrations.AddField(
            model_name='kelaas_post',
            name='files',
            field=models.ManyToManyField(blank=True, to='core.File'),
        ),
        migrations.AddField(
            model_name='kelaas',
            name='students',
            field=models.ManyToManyField(blank=True, related_name='kelaases', to='core.Student'),
        ),
        migrations.AddField(
            model_name='kelaas',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kelaases', to='core.Teacher'),
        ),
        migrations.AddField(
            model_name='badge_link',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badges', to='core.Student'),
        ),
    ]
